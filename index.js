var A=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports);var C=A((k,S)=>{function $(r){let t="";for(let s in r){let e=r[s];for(let c in e){let n=[c];c.includes("$")&&(n=c.split("$"));let i=e[c];for(let o in i){let p=i[o],h=o,a=!1;o.endsWith("!")&&(a=!0,h=o.split("!")[0]);let l=n.map(y=>`${y}:${p}${a?" !important":""}`).join(";");t+=`.${s.startsWith("$")?"":s}${h}{${l}}`}}}return t}function d(r){let t="";for(let s in r){let e=r[s],{css:c,actions:n}=e;if(c){let i=g(c);t+=`.${s}{${i}}`}if(n)for(let i in n){let o=n[i];t+=`.${s}:${i}{${g(o)}}`}}return t}function g(r){return r?Object.entries(r).map(([t,s])=>`${t}:${s}`).join(";"):""}S.exports={parse:function(r){let{atomic:t,utils:s}=r,e="";return t&&(e+=$(t)),s&&(e+=d(s)),e},parseAtomic:$,parseUtils:d}});var u=require("fs"),w=require("path"),m=C(),f=class{options={version:4,config:"",assets:"",importWay:"inline",parser:null};CSS_ASSET_NAME="atomic";cssContent="";constructor(t){for(let s in t)t[s]&&(this.options[s]=t[s]);if(this.options.parser)if(typeof this.options.parser=="function")this.cssContent=this.options.parser(this.getConfig());else throw new Error("Customizer parser should be function,which params is config");else this.cssContent=m.parse(this.getConfig())}getConfig(){if(!this.options.config)throw new Error("config path is required, please check.");if(this.options.config){if(!u.existsSync(this.options.config))throw new Error("config path is not valid, please check.");return require(this.options.config)}}getAssetsPath(t){let s=this.options.assets;return t?`${s}/${this.CSS_ASSET_NAME}.${t}.css`:`${s}/${this.CSS_ASSET_NAME}.css`}apply(t){let s=f.name;if(!this.options.version)throw new Error("Please make sure you specify the version field.");if(this.options.version=="5"){let{Compilation:e,sources:c}=t.webpack;t.hooks.thisCompilation.tap(s,n=>{n.hooks.processAssets.tap({name:s,stage:e.PROCESS_ASSETS_STAGE_SUMMARIZE},i=>{this.options.importWay==="link"&&n.emitAsset(this.getAssetsPath(n.hash),new c.RawSource(this.cssContent)),Object.keys(i).filter(o=>o.endsWith(".html")).forEach(o=>{let p=i[o].source(),[h,a]=p.split("</head>"),l=`${h}${this.getMiddlePart(n.hash)}</head>${a}`;n.updateAsset(o,new c.RawSource(l))}),u.writeFileSync(w.resolve(__dirname,"./.atomic.css"),this.cssContent)})})}else if(this.options.version=="4")t.hooks.emit.tapAsync(s,(e,c)=>{let n=e.assets;this.options.importWay==="link"&&e.emitAsset(this.getAssetsPath(e.hash),this.getSource(this.cssContent)),Object.keys(n).filter(i=>i.endsWith(".html")).forEach(i=>{let o=n[i].source(),[p,h]=o.split("</head>"),a=`${p}${this.getMiddlePart(e.hash)}</head>${h}`;e.updateAsset(i,this.getSource(a))}),u.writeFileSync(w.resolve(__dirname,".atomic.css"),this.cssContent),c()});else throw new Error(`Doesn't support webpack version ${this.options.version}.`)}getSource(t){return{source:()=>t,size:()=>t.lenght}}getMiddlePart(t){let s=`<link type="text/css" rel="stylesheet" href="${this.getAssetsPath(t)}">`;switch(this.options.importWay){case"link":return s;case"inline":return`<style type="text/css">${this.cssContent}</style>`;default:return s}}};module.exports=f;exports.default=f;
