var y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var u=y((w,h)=>{h.exports=function(e){let{atomic:t,utils:s}=e,n="";return t&&(n+=C(t)),s&&(n+=A(s)),n};function C(e){let t="";for(let s in e){let n=e[s];for(let r in n){let o=n[r];for(let i in o){let c=o[i];t+=`.${s.startsWith("$")?"":s}${i}{${r}:${c}}`}}}return t}function A(e){let t="";for(let s in e){let n=e[s],{css:r,actions:o}=n;if(r){let i=f(r);t+=`.${s}{${i}}`}if(o)for(let i in o){let c=o[i];t+=`.${s}:${i}{${f(c)}}`}}return t}function f(e){return e?Object.entries(e).map(([t,s])=>`${t}:${s}`).join(";"):""}});var l=require("fs"),p=require("path"),m=u(),a=class{options={config:"",assets:"",importWay:"link"};CSS_ASSET_NAME="atomic.css";cssContent="";constructor(t){for(let s in t)t[s]&&(this.options[s]=t[s]);this.cssContent=m(this.getConfig())}getConfig(){if(this.options.config){if(!l.existsSync(this.options.config))throw new Error("config path is not valid, please check.");return require(this.options.config)}return require(p.resolve(__dirname,"./default.config.js"))}getAssetsPath(){let t=this.options.assets;return`${t.endsWith("/")?t:`${t}/`}${this.CSS_ASSET_NAME}`}apply(t){let s=a.name,{Compilation:n,sources:r}=t.webpack;t.hooks.thisCompilation.tap(s,o=>{o.hooks.processAssets.tap({name:s,stage:n.PROCESS_ASSETS_STAGE_SUMMARIZE},i=>{this.options.importWay==="link"&&o.emitAsset(this.getAssetsPath(),new r.RawSource(this.cssContent)),Object.keys(i).filter(c=>c.endsWith(".html")).forEach(c=>{let $=i[c].source(),[g,S]=$.split("</head>"),d=`${g}${this.getMiddlePart()}</head>${S}`;o.updateAsset(c,new r.RawSource(d))}),l.writeFileSync(p.resolve(__dirname,"./.atomic.css"),this.cssContent)})})}getMiddlePart(){let t=`<link type="text/css" rel="stylesheet" href="${this.getAssetsPath()}">`;switch(this.options.importWay){case"link":return t;case"inline":return`<style type="text/css">${this.cssContent}</style>`;default:return t}}};module.exports=a;exports.default=a;
